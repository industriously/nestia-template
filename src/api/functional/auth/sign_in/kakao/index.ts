/**
 * @packageDocumentation
 * @module api.functional.auth.sign_in.kakao
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";
import typia from "typia";

import type { IAuthentication } from "./../../../../structures/authentication";

/**
 * @controller SignInKakaoController.execute()
 * @path POST /auth/sign-in/kakao
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function execute(
    connection: IConnection,
    body: IAuthentication.ISignIn,
): Promise<void> {
    return Fetcher.fetch(
        connection,
        execute.ENCRYPTED,
        execute.METHOD,
        execute.path(),
        body,
        execute.stringify,
    );
}
export namespace execute {
    export type Input = IAuthentication.ISignIn;

    export const METHOD = "POST" as const;
    export const PATH: string = "/auth/sign-in/kakao";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export const path = (): string => {
        return `/auth/sign-in/kakao`;
    }
    export const stringify = (input: Input) => typia.assertStringify(input);
}